# docker volume create --name=pg_data
volumes:
  pg_data:
    external: ${APP_PGDATA_VOLUME_EXTERNAL:-true}
    name: ${APP_PGDATA_VOLUME}

services:
  db:
    image: postgres
    volumes:
      - ${APP_PGDATA_VOLUME}:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

  web:
    depends_on:
      - db
    build:
      context: .
      target: ${APP_TARGET}
    volumes:
       - ./:/home/deploy/app
    ports:
      - "3000:3000"
    environment:
      APP_NAME: ${APP_NAME}
      RAILS_ENV: ${RAILS_ENV}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT}
      RAILS_SERVE_STATIC_FILES: ${RAILS_SERVE_STATIC_FILES}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      WEBPACKER_DEV_SERVER_HOST: webpack

  webpack:
    profiles:
      - dev
    user: deploy
    build:
      context: .
      target: ${APP_TARGET}
    command: bundle exec ./bin/webpack-dev-server
    volumes:
       - ./:/home/deploy/app
    ports:
      - "3035:3035"
    environment:
      RAILS_ENV: ${RAILS_ENV}
      NODE_ENV: ${RAILS_ENV}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
      WEBPACKER_DEV_SERVER_HMR: 'true'
